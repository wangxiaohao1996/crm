package com.bjpowernode.crm.workbench.clue.mapper;

import com.bjpowernode.crm.workbench.clue.pojo.Customer;

import java.util.List;
import java.util.Map;

public interface CustomerMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_customer
     *
     * @mbg.generated Mon Jul 17 13:32:49 CST 2023
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_customer
     *
     * @mbg.generated Mon Jul 17 13:32:49 CST 2023
     */
    int insert(Customer row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_customer
     *
     * @mbg.generated Mon Jul 17 13:32:49 CST 2023
     */
    int insertSelective(Customer row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_customer
     *
     * @mbg.generated Mon Jul 17 13:32:49 CST 2023
     */
    Customer selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_customer
     *
     * @mbg.generated Mon Jul 17 13:32:49 CST 2023
     */
    int updateByPrimaryKeySelective(Customer row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_customer
     *
     * @mbg.generated Mon Jul 17 13:32:49 CST 2023
     */
    int updateByPrimaryKey(Customer row);

    /**
     * 将线索的客户信息转成客户表信息
     * @param customer
     * @return
     */
    int insertCustomerFromClueConvert(Customer customer);

    /**
     * 根据名称模糊查询客户表
     * @param name
     * @return
     */
    List<String> selectCustomerByName(String name);

    /**
     * 根据全名去查询客户信息
     * @param name
     * @return
     */
    Customer selectCustomerByAllName(String name);

    /**
     * 根据条件查询客户记录
     * @param map
     * @return
     */
    List<Customer> selectCustomerByCondition(Map<String,Object> map);

    /**
     * 根据条件模糊查询客户记录条数
     * @param map
     * @return
     */
    int selectCustomerCountByCondition(Map<String,Object> map);

    /**
     * 创建客户信息
     * @param customer
     * @return
     */
    int insertCustomer(Customer customer);

    /**
     * 根据id查询客户信息
     * @param id
     * @return
     */
    Customer selectCustomerById(String id);

    /**
     * 根据id修改客户信息
     * @param customer
     * @return
     */
    int updateCustomer(Customer customer);

    /**
     * 根据id数组批量删除客户列表
     * @param ids
     * @return
     */
    int deleteCustomerByIds(String[] ids);

    /**
     * 根据id为明细页面查询客户详细信息
     * @return
     */
    Customer selectCustomerForDetailById(String id);


}