package com.bjpowernode.crm.workbench.clue.mapper;

import com.bjpowernode.crm.workbench.clue.pojo.Clue;

import java.util.List;
import java.util.Map;

public interface ClueMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbg.generated Thu Jul 13 15:46:24 CST 2023
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbg.generated Thu Jul 13 15:46:24 CST 2023
     */
    int insert(Clue row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbg.generated Thu Jul 13 15:46:24 CST 2023
     */
    int insertSelective(Clue row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbg.generated Thu Jul 13 15:46:24 CST 2023
     */
    Clue selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbg.generated Thu Jul 13 15:46:24 CST 2023
     */
    int updateByPrimaryKeySelective(Clue row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbg.generated Thu Jul 13 15:46:24 CST 2023
     */
    int updateByPrimaryKey(Clue row);

    /**
     * 创建线索
     * @param clue
     * @return
     */
    int insertClue(Clue clue);

    /**
     * 根据线索id查询线索明细
     * @param id
     * @return
     */
    Clue selectClueForDetailById(String id);

    /**
     * 根据线索id查询线索信息
     * @param id
     * @return
     */
    Clue selectClueForConvertById(String id);

    /**
     * 根据id删除线索
     * @param id
     * @return
     */
    int deleteClueById(String id);

    /**
     *  根据条件查询所有的线索
     * @return
     */
    List<Clue> selectClueByCondition(Map<String,Object> map);

    /**
     * 根据条件查询线索的总记录条数
     * @param map
     * @return
     */
    int selectClueCountByCondition(Map<String,Object> map);

    /**
     * 根据id数组批量删除线索
     * @param ids
     * @return
     */
    int deleteClueByIds(String[] ids);

    /**
     * 根据Id修改线索
     * @param clue
     * @return
     */
    int updateClueById(Clue clue);
}