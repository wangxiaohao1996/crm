package com.bjpowernode.crm.workbench.clue.mapper;

import com.bjpowernode.crm.workbench.clue.pojo.ClueRemark;

import java.util.List;

public interface ClueRemarkMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_remark
     *
     * @mbg.generated Fri Jul 14 10:22:12 CST 2023
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_remark
     *
     * @mbg.generated Fri Jul 14 10:22:12 CST 2023
     */
    int insert(ClueRemark row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_remark
     *
     * @mbg.generated Fri Jul 14 10:22:12 CST 2023
     */
    int insertSelective(ClueRemark row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_remark
     *
     * @mbg.generated Fri Jul 14 10:22:12 CST 2023
     */
    ClueRemark selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_remark
     *
     * @mbg.generated Fri Jul 14 10:22:12 CST 2023
     */
    int updateByPrimaryKeySelective(ClueRemark row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue_remark
     *
     * @mbg.generated Fri Jul 14 10:22:12 CST 2023
     */
    int updateByPrimaryKey(ClueRemark row);

    /**
     * 根据线索id，查询线索备注
     * @param clueId
     * @return
     */
    List<ClueRemark> selectClueRemarkForDetailByClueId(String clueId);

    /**
     * 根据线索id，查询线索备注，为线索转换做准备
     * @param clueId
     * @return
     */
    List<ClueRemark> selectClueRemarkForConvertByClueId(String clueId);

    /**
     * 根据线索id删除线索备注
     * @param clueId
     * @return
     */
    int deleteClueRemarkByClueId(String clueId);

    /**
     * 保存创建的线索备注
     * @param clueRemark
     * @return
     */
    int insertClueRemark(ClueRemark clueRemark);

    /**
     * 根据线索备注id删除备注
     * @param remarkId
     * @return
     */
    int deleteClueRemarkByRemarkId(String remarkId);

    /**
     * 根据线索id数组，批量删除线索备注
     * @param clueIds
     * @return
     */
    int deleteClueRemarkByClueIds(String[] clueIds);

    /**
     * 根据id修改线索备注
     * @param remark
     * @return
     */
    int updateClueRemarkById(ClueRemark remark);
}