package com.bjpowernode.crm.workbench.clue.mapper;

import com.bjpowernode.crm.workbench.clue.pojo.TranRemark;
import org.apache.poi.ss.formula.functions.T;

import java.util.List;

public interface TranRemarkMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_tran_remark
     *
     * @mbg.generated Mon Jul 17 20:01:00 CST 2023
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_tran_remark
     *
     * @mbg.generated Mon Jul 17 20:01:00 CST 2023
     */
    int insert(TranRemark row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_tran_remark
     *
     * @mbg.generated Mon Jul 17 20:01:00 CST 2023
     */
    int insertSelective(TranRemark row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_tran_remark
     *
     * @mbg.generated Mon Jul 17 20:01:00 CST 2023
     */
    TranRemark selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_tran_remark
     *
     * @mbg.generated Mon Jul 17 20:01:00 CST 2023
     */
    int updateByPrimaryKeySelective(TranRemark row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_tran_remark
     *
     * @mbg.generated Mon Jul 17 20:01:00 CST 2023
     */
    int updateByPrimaryKey(TranRemark row);

    /**
     * 将线索备注转到交易备注表
     * @return
     */
    int insertTranRemarkFromClueRemark(List<TranRemark> tranRemarkList);

    /**
     * 根据交易id查询该交易下的所有备注
     * @param tranId
     * @return
     */
    List<TranRemark> selectTranRemarkByTranId(String tranId);

    /**
     * 从交易明细页面创建交易备注
     * @param tranRemark
     * @return
     */
    int insertTranRemark(TranRemark tranRemark);

    /**
     * 根据id删除交易备注
     * @return
     */
    int deleteTranRemarkById(String id);

    /**
     * 根据id修改交易备注
     * @param tranRemark
     * @return
     */
    int updateTranRemarkById(TranRemark tranRemark);

    /**
     * 根据交易id数组批量删除交易备注
     * @param tranIds
     * @return
     */
    int deleteTranRemarkByTranIds(String[] tranIds);
}