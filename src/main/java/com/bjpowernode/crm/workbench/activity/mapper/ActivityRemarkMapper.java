package com.bjpowernode.crm.workbench.activity.mapper;

import com.bjpowernode.crm.workbench.activity.pojo.ActivityRemark;

import java.util.List;

public interface ActivityRemarkMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity_remark
     *
     * @mbg.generated Mon Jul 10 10:13:09 CST 2023
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity_remark
     *
     * @mbg.generated Mon Jul 10 10:13:09 CST 2023
     */
    int insert(ActivityRemark row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity_remark
     *
     * @mbg.generated Mon Jul 10 10:13:09 CST 2023
     */
    int insertSelective(ActivityRemark row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity_remark
     *
     * @mbg.generated Mon Jul 10 10:13:09 CST 2023
     */
    ActivityRemark selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity_remark
     *
     * @mbg.generated Mon Jul 10 10:13:09 CST 2023
     */
    int updateByPrimaryKeySelective(ActivityRemark row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity_remark
     *
     * @mbg.generated Mon Jul 10 10:13:09 CST 2023
     */
    int updateByPrimaryKey(ActivityRemark row);

    /**
     * 给市场明细页面查询备注信息
     * @param activityId
     * @return
     */
    List<ActivityRemark> selectActivityRemarkByActivityId(String activityId);

    /**
     * 创建市场活动备注
     * @param activityRemark
     * @return
     */
    int insertActivityRemark(ActivityRemark activityRemark);

    /**
     * 通过Id删除市场活动备注
     * @param id
     * @return
     */
    int deleteActivityRemarkById(String id);

    /**
     * 根据id更新市场活动备注列表
     * @param activityRemark
     * @return
     */
    int updateActivityRemarkById(ActivityRemark activityRemark);

    /**
     * 根据市场活动id数组批量删除市场活动备注
     * @param activityIds
     * @return
     */
    int deleteActivityRemarkByActivityIds(String[] activityIds);
}