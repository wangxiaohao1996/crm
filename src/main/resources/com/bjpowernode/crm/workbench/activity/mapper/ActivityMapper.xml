<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bjpowernode.crm.workbench.activity.mapper.ActivityMapper">
  <resultMap id="BaseResultMap" type="com.bjpowernode.crm.workbench.activity.pojo.Activity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jun 30 11:33:11 CST 2023.
    -->
    <id column="id" jdbcType="CHAR" property="id" />
    <result column="owner" jdbcType="CHAR" property="owner" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="start_date" jdbcType="CHAR" property="startDate" />
    <result column="end_date" jdbcType="CHAR" property="endDate" />
    <result column="cost" jdbcType="VARCHAR" property="cost" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="create_time" jdbcType="CHAR" property="createTime" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="edit_time" jdbcType="CHAR" property="editTime" />
    <result column="edit_by" jdbcType="VARCHAR" property="editBy" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jun 30 11:33:11 CST 2023.
    -->
    id, owner, name, start_date, end_date, cost, description, create_time, create_by, 
    edit_time, edit_by
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jun 30 11:33:11 CST 2023.
    -->
    select 
    <include refid="Base_Column_List" />
    from tbl_activity
    where id = #{id,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jun 30 11:33:11 CST 2023.
    -->
    delete from tbl_activity
    where id = #{id,jdbcType=CHAR}
  </delete>

  <insert id="insertSelective" parameterType="com.bjpowernode.crm.workbench.activity.pojo.Activity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jun 30 11:33:11 CST 2023.
    -->
    insert into tbl_activity
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="owner != null">
        owner,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="startDate != null">
        start_date,
      </if>
      <if test="endDate != null">
        end_date,
      </if>
      <if test="cost != null">
        cost,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="editTime != null">
        edit_time,
      </if>
      <if test="editBy != null">
        edit_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=CHAR},
      </if>
      <if test="owner != null">
        #{owner,jdbcType=CHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null">
        #{startDate,jdbcType=CHAR},
      </if>
      <if test="endDate != null">
        #{endDate,jdbcType=CHAR},
      </if>
      <if test="cost != null">
        #{cost,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=CHAR},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="editTime != null">
        #{editTime,jdbcType=CHAR},
      </if>
      <if test="editBy != null">
        #{editBy,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bjpowernode.crm.workbench.activity.pojo.Activity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jun 30 11:33:11 CST 2023.
    -->
    update tbl_activity
    <set>
      <if test="owner != null">
        owner = #{owner,jdbcType=CHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null">
        start_date = #{startDate,jdbcType=CHAR},
      </if>
      <if test="endDate != null">
        end_date = #{endDate,jdbcType=CHAR},
      </if>
      <if test="cost != null">
        cost = #{cost,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=CHAR},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="editTime != null">
        edit_time = #{editTime,jdbcType=CHAR},
      </if>
      <if test="editBy != null">
        edit_by = #{editBy,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bjpowernode.crm.workbench.activity.pojo.Activity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jun 30 11:33:11 CST 2023.
    -->
    update tbl_activity
    set owner = #{owner,jdbcType=CHAR},
      name = #{name,jdbcType=VARCHAR},
      start_date = #{startDate,jdbcType=CHAR},
      end_date = #{endDate,jdbcType=CHAR},
      cost = #{cost,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=CHAR},
      create_by = #{createBy,jdbcType=VARCHAR},
      edit_time = #{editTime,jdbcType=CHAR},
      edit_by = #{editBy,jdbcType=VARCHAR}
    where id = #{id,jdbcType=CHAR}
  </update>

  <insert id="insertActivity" parameterType="com.bjpowernode.crm.workbench.activity.pojo.Activity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Jun 30 11:33:11 CST 2023.
    -->
    <!--
         保存新建市场活动的信息到数据库的sql语句
        -->
    insert into tbl_activity (id, owner, name, start_date,
    end_date, cost, description,
    create_time, create_by)
    values (#{id,jdbcType=CHAR}, #{owner,jdbcType=CHAR}, #{name,jdbcType=VARCHAR}, #{startDate,jdbcType=CHAR},
    #{endDate,jdbcType=CHAR}, #{cost,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR},
    #{createTime,jdbcType=CHAR}, #{createBy,jdbcType=VARCHAR})
  </insert>

  <!--根据条件查询市场活动的信息的sql语句 -->
   <select id="selectActivityByConditionForPage" resultMap="BaseResultMap">
     select a.id, u1.name as owner, a.name, a.start_date, a.end_date, a.cost, a.description, a.create_time,
            u2.name as create_by,a.edit_time, u3.name as edit_by
     from  tbl_activity a
         join tbl_user u1 on a.owner=u1.id
         join tbl_user u2 on a.create_by= u2.id
         left join tbl_user u3 on a.edit_by=u3.id
     <where>
       <if test="name!=null and name!=''">
           a.name like '%' #{name} '%'
       </if>
       <if test="owner!=null and owner!=''">
         and u1.name like '%' #{owner} '%'
       </if>
       <if test="startDate!=null and startDate!=''">
         and a.start_date >= #{startDate}
       </if>
       <if test="endDate!=null and endDate!=''">
         and a.end_date &lt;= #{endDate}
       </if>
     </where>
     order by a.create_time desc
          limit #{pageNo}, #{pageSize}
   </select>

  <!--根据条件查询市场活动表的总记录条数sql语句 -->
<select id="selectCountOfActivityByCondition" resultType="int">
  select count(*)
  from  tbl_activity a
  join tbl_user u1 on a.owner=u1.id
  join tbl_user u2 on a.create_by= u2.id
  left join tbl_user u3 on a.edit_by=u3.id
  <where>
    <if test="name!=null and name!=''">
        a.name like '%' #{name} '%'
    </if>
    <if test="owner!=null and owner!=''">
      and u1.name like '%' #{owner} '%'
    </if>
    <if test="startDate!=null and startDate!=''">
      and a.start_date &gt;= #{startDate}
    </if>
    <if test="endDate!=null and endDate!=''">
      and a.end_date &lt;= #{endDate}
    </if>
  </where>
</select>


  <!--根据id删除市场活动表信息的sql语句 -->
  <delete id="deleteActivityByIds" >
    delete from tbl_activity
           where id in
        <foreach collection="ids" item="id" separator="," open="(" close=")">
             #{id}
        </foreach>
  </delete>


  <!--根据id查询市场活动表信息的sql语句 -->
  <select id="selectActivityById" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/>
      from tbl_activity
      where id=#{id}
  </select>

  <!--根据id更新市场活动表信息的sql语句 -->
  <update id="updateActivityById" >
    update tbl_activity set
                          owner = #{owner},
                          name = #{name},
                          start_date = #{startDate},
                          end_date = #{endDate},
                          cost = #{cost},
                          description = #{description},
                          edit_time = #{editTime},
                          edit_by = #{editBy}
    where id = #{id}
  </update>

  <!--查询所有的市场活动表信息的sql语句 -->
  <select id="selectAllActivitys" resultMap="BaseResultMap">
  select a.id, u1.name as owner, a.name, a.start_date, a.end_date, a.cost, a.description, a.create_time,
  u2.name as create_by,a.edit_time, u3.name as edit_by
  from  tbl_activity a
  join tbl_user u1 on a.owner=u1.id
  join tbl_user u2 on a.create_by= u2.id
  left join tbl_user u3 on a.edit_by=u3.id
   order by a.create_time desc
  </select>

  <!--根据id数组查询市场活动表信息的sql语句 -->
  <select id="selectActivityByIds" resultMap="BaseResultMap">
  select a.id, u1.name as owner, a.name, a.start_date, a.end_date, a.cost, a.description, a.create_time,
  u2.name as create_by,a.edit_time, u3.name as edit_by
  from  tbl_activity a
  join tbl_user u1 on a.owner=u1.id
  join tbl_user u2 on a.create_by= u2.id
  left join tbl_user u3 on a.edit_by=u3.id
   where a.id in
    <foreach collection="ids"  item="id" separator="," open="(" close=")">
      #{id}
    </foreach>
  order by a.create_time desc
  </select>

  <!--根据导入文件批量创建市场活动的sql语句 -->
  <insert id="insertActivityByFile">
     insert into tbl_activity(id, owner, name, start_date, end_date, cost, description, create_time, create_by)
     values
      <foreach collection="activities" item="obj" separator=",">
        (#{obj.id}, #{obj.owner}, #{obj.name}, #{obj.startDate},#{obj.endDate}, #{obj.cost}, #{obj.description},
         #{obj.createTime}, #{obj.createBy})
      </foreach>
  </insert>
  
  <select id="selectActivityForDetailById" resultMap="BaseResultMap">
    select a.id, u1.name as owner, a.name, a.start_date, a.end_date, a.cost, a.description, a.create_time,
           u2.name as create_by,a.edit_time, u3.name as edit_by
    from  tbl_activity a
            join tbl_user u1 on a.owner=u1.id
            join tbl_user u2 on a.create_by= u2.id
            left join tbl_user u3 on a.edit_by=u3.id
     where a.id = #{id}
  </select>
<!--  根据clueId查询关联该线索的所有市场活动-->
  <select id="selectActivityForClueDetailByClueId" resultMap="BaseResultMap">
    select a.id,u1.name as owner, a.name, a.start_date, a.end_date
    from  tbl_activity a
            join tbl_user u1 on a.owner=u1.id
            join tbl_clue_activity_relation car on a.id=car.activity_id
    where car.clue_id=#{clueId}
  </select>
<!--根据市场活动名称和线索id模糊查询市场活动，为线索关联市场活动做准备-->
  <select id="selectActivityForClueDetailByNameClueId" resultMap="BaseResultMap">
    select a.id,u1.name as owner, a.name, a.start_date, a.end_date
    from  tbl_activity a
    join tbl_user u1 on a.owner=u1.id
    where a.name like '%' #{name} '%' and a.id not in (select activity_id from tbl_clue_activity_relation where clue_id=#{clueId})
  </select>
<!--  根据市场活动id数组查询市场活动，每成功关联一条市场活动就在线索明细页面显示一条记录-->
  <select id="selectActivityByActivityIds" resultMap="BaseResultMap">
    select a.id, u.name as owner, a.name, a.start_date, a.end_date
    from  tbl_activity a
    join tbl_user u on a.owner=u.id
    where a.id in
    <foreach collection="ids"  item="id" separator="," open="(" close=")">
      #{id}
    </foreach>
  </select>

<!--  根据市场活动名称和clueId模糊查询与该线索关联的市场活动-->
  <select id="selectActivityByNameClueId" resultMap="BaseResultMap">
    select a.id,u.name as owner, a.name, a.start_date, a.end_date
    from  tbl_activity a
            join tbl_user u on a.owner=u.id
    where a.name like '%' #{name} '%' and a.id in (select activity_id from tbl_clue_activity_relation where clue_id=#{clueId})
  </select>

  <select id="selectActivityForContactsDetailByContactsId" resultMap="BaseResultMap">
    select a.id, u.name as owner, a.name, a.start_date, a.end_date
        from tbl_activity a
    join tbl_user u on a.owner=u.id
    join tbl_contacts_activity_relation car on a.id=car.activity_id
    where car.contacts_id=#{contactsId}
  </select>

  <select id="selectActivityForContactsActivityByName" resultMap="BaseResultMap">
    select a.id, u.name as owner, a.name, a.start_date, a.end_date
    from tbl_activity a
           join tbl_user u on a.owner=u.id
    where a.name like '%' #{name} '%' and a.id not in(select activity_id from tbl_contacts_activity_relation where contacts_id=#{contactsId})
  </select>
  <select id="selectActivityByName" resultMap="BaseResultMap">
    select a.id,u.name as owner, a.name, a.start_date, a.end_date
    from  tbl_activity a
            join tbl_user u on a.owner=u.id
    where a.name like '%' #{name} '%'
  </select>
</mapper>